
package myTest;

import java.util.Arrays;

public class Programmers_lotto {

   public static void main(String[] args) {
      
      int lottos[] = {1,0,0,3,35,21};
      int win_nums [] = {1,2,3,21,35,22};
      
      int result [] = solution(lottos, win_nums);
      System.out.println(Arrays.toString(result));

   } // main

   
   public static int [] solution(int lottos[], int win_nums []) {
      
      int max_min_rank [] = new int [2];
      
      Arrays.sort(lottos);
      Arrays.sort(win_nums);
      
      int match = 0;
      int zero = 0;
      
      for (int i = 0; i < lottos.length; i++) {
         
         if(lottos[i] == 0) zero++;
         
         for (int j = 0; j < win_nums.length; j++) {
            
            if(lottos[i] == win_nums[j]) match++;
            
            
         } // j for
         
      } // i for
      
      max_min_rank[0] = getRank(match + zero);               // 최대
      max_min_rank[1] = getRank(match);                     // 최소
      
      return max_min_rank;
      
   } // lottos


   private static int getRank(int n) {
      
      switch (n) {
      case 6:
         return 1;
         
         
      case 5:
         return 2;   
         
         
      case 4:
         return 3;   

         
      case 3:
         return 4;   
         
         
      case 2:
         return 5;   
         
         
      default:
         return 6;

      }
      
   }
   
   
} // class


















import java.util.*;
class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int [] answer = new int [2];
       
        
        int same=0;
        int count=0;
        
        Arrays.sort(lottos);
        Arrays.sort(win_nums);
        
        for (int i=0;i<lottos.length;i++){
            if(lottos[i]==0) {
                count++;
            }
            for(int j=0;j<win_nums.length;j++){
              
                    
                if(lottos[i]==win_nums[j]){
                    same++;
                    
                }
            }
            
        }
       int max=count+same;
        int min=same;
        answer[0]=getGrade(max);
        answer[1]=getGrade(min);
        return answer;
        
    }
    public int getGrade(int n){
    
       return 7- n;
      /*
        switch(n){
            case 6 :
                return 1;
            case 5:
                return 2;
            case 4:
                return 3;
            case 3:
                return 4;
            case 2:
                return 5;
            default:
                return 6;
        }
        */
    }
}






















import java.util.Arrays;

public static int[] solution(int[] lottos, int[] win_nums) {
      int zeroNum=0; //0의 수가 몇개인지 
      int count=0; //같은 것이 몇개인지 
      
      Arrays.sort(lottos); 
      Arrays.sort(win_nums);
      for(int i: lottos) {      
            if(Arrays.binarySearch(win_nums, i) >=0) count++;
            if(i==0) zeroNum++;
      
      }
      
        int[] answer = {Math.min(7-(count+zeroNum),6),Math.min
              (7-count, 6)};
        return answer;
}



박재영
class Solution {
   lottos = { 44	1	0	0	31	25 }
   win_nums = {31	10	45	1	6	19   }
   

    public int[] solution(int[] lottos, int[] win_nums) {//로또번호,당첨번호
        // hit  일치하는 로또 번호 갯수
        int hit=0, zero_count=0;//맞은갯수,알아 볼 수 없는 번호
    
       
       // 정렬
       
        for (int i = 0; i < lottos.length; i++) {//로또번호,당첨번호 비교
        
             if(lottos[i]==0){
               zero_count++;//0번 갯수
               continue;
               }
        
	         for (int j = strat ; j < win_nums.length && lottos[i]  <= lwin_nums[j; j++) {
	            //  hit=(lottos[i]==win_nums[j])?++hit:hit;
	            if(lottos[i]==win_nums[j]){
	                // hit 1증가
	                // break;
	            }
	         }
	         
             
         
      }
        
        int max,min;
        //최대등수 (7-맞춘개수)
        max=(hit==0&&zero_count==0)?6:7-hit-zero_count;//최대 등수
        min=(hit==0)?6:7-hit;//최소등수
        int [] answer= {max,min}; 
                
        return answer;
    }
}





















class Solution {
    public int[] solution(int[] lottos, int[] win_nums) {
        int hit=0, zero_count=0;
    
       
        for (int i = 0; i < lottos.length; i++) {
           
         for (int j = 0; j < win_nums.length; j++) {
            hit=(lottos[i]==win_nums[j])?++hit:hit;
            
         }
         if(lottos[i]==0)zero_count++;
      }
        int max,min;
        max=(hit==0&&zero_count==0)?6:7-hit-zero_count;
        min=(hit==0)?6:7-hit;
        int [] answer= {max,min}; 
                
        return answer;
    }
}