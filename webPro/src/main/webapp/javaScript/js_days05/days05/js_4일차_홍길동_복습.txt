
1. 이름과 나이 변수를 선언하고 초기화 한 후 
   이름은 "홍길동"이고, 나이는 20살입니다. 
   형식으로 출력하는 코딩을 하세요.
   <p id="demo"></p>
   
<p id="demo"></p>
<script>  
  var name = "홍길동";
  var age = 20;
  var html = `이름은 \"${ name}\"이고, 나이는 ${ age } 살입니다. `;
  $("#demo").html( html );
</script>
   
2. 숫자로 변환하는 함수 3가지를 적으세요
  ㄱ.  Number()
  ㄴ.  parseInt()
  ㄷ.  parseFloat()
  
3. 배열에 사용되는 속성, 함수 설명하세요 . 
   ㄱ. sort()      문자열값 정렬     +  오름차순 정렬
       1   1000  2  5  51
        내림차순   sort( compare )
   ㄴ. reverse()  1 2 3 4 5
                         5 4 3 2 1
   ㄷ. length   배열의 크기
   ㄹ. forEach()   요소를 반복 처리      elt, i , array   
   ㅁ. toString()  배열 문자열 변환  "1,2,3,4,5"
   ㅂ. join()   요소를 구분자 연결
   ㅅ. push()  마지막 요소를 추가
   ㅇ. pop()    마지막 요소를 제거하고 가져오는 메서드
   ㅈ. shift() 처음 요소를 제거하고 가져오는 메서드
   ㅊ. unshift()  처음 요소를 추가
   ㅋ. delete   요소 삭제         ,  m[1]=2      ->  undefined
   ㅌ. concat()  병합   배열+배열, 배열+값 등등
   ㅍ. splice()   pos
                       amount
                       newelt
   ㅎ. slice()    배열의 일부분을 -> 새로운 배열 
   
4-1.   배열 m을 선언하고 1~100 사이의 랜덤한 값을 채워 넣고 
     <p id="demo"></p> 에   ul/li 태그로 출력하는 js 코딩을 하세요.  

<p id="demo"></p> 
 
<script>
  // java   1~100 임의의값    Random 클래스 , Math.random()
  // 토/일/월/화      수(6/8)
  // js   
  // 0.0 <=   실수  < 1.0
  // console.log( parseInt(  3.9 ) );  // 3    절삭  X
  let m  = [];
  for (var i = 0; i < 5; i++) {
	  // m.push(Math.trunc(Math.random()*100)+1); 
	  m.push( parseInt(  Math.random()*100 ) + 1  ) ;
 }
  let html = "<ul><li>" +   m.join("</li><li>") + "</li><ul>";
  $("#demo").html(  html );
  
</script> 

       
4-2. 배열의 0 번째 요소에   101 값을 채워넣는 코딩을 하세요 .
4-3. 배열의 2 번째 요소 값을 제거하는 코딩을 하세요. 
4-4. 배열의 3 번째 요소에 205를 삽입하는 코딩을 하세요.  
4-5. 배열의 0 번째 요소값을 제거하고 얻어가는 코딩을 하세요 . 
4-6. 배열의 가장 큰값 ,가장 작은값 출력

<p id="demo"></p> 
 
<script>
  // java   1~100 임의의값    Random 클래스 , Math.random()
  // 토/일/월/화      수(6/8)
  // js   
  // 0.0 <=   실수  < 1.0
  // console.log( parseInt(  3.9 ) );  // 3    절삭  X
  let m  = [];
  for (var i = 0; i < 5; i++) {
	  // m.push(Math.trunc(Math.random()*100)+1); 
	  m.push( parseInt(  Math.random()*100 ) + 1  ) ;
 }
  
  // 4-2
  m.unshift(101);
  // 4-3
  m.splice(2, 1);
  // 4-4
  m.splice(3, 0, 205)
  // 4-5
  let firstElement =  m.shift();   // 101
  console.log( firstElement );
  
  // 4-6, max      min
  //m.sort( (a,b)=> a-b);  // 오/내   정렬          성능 좋지는 않다.   
  //console.log(`min : ${ m[0] }, max : ${ m[m.length-1]}`);
  
  // apply() 함수 ? 
  let max =  Math.max.apply(null, m);
  let min =  Math.min.apply(null, m);
  
  
  // 출력
  let html = "<ul><li>" +   m.join("</li><li>") + "</li><ul>";
  $("#demo").html(  html );
  
  
  function arrayMax( m ) {
	  let max = m[0];
	  for (var i = 1; i < m.length; i++) {
		   if( m[i] >  max ){
			   max = m[i];
		   }
	 } // for
	 return max;
  }
  
</script> 


5. m 배열의 각 요소의 값을 두 배 증가하시킨 새로운 배열 n 을 만들어서 출력하세요.
var m = [45, 4, 9, 16, 25];

<!-- 
<script>
var m = [45, 4, 9, 16, 25];
var n = [];
for (var i = 0; i < m.length; i++)    n.push( 	m[i]*2  );
console.log( n.toString() );   // "90,8,18,32,50" 
</script>
 -->
 
 <script>
 var m = [45, 4, 9, 16, 25];
 // map() 함수는 각 배열의 요소에 대해 함수를 수행하여 새로운 배열을 생성하는 함수
 // var n =  m.map(function(elt, i, array) {
 var n =  m.map(function(elt) {
 	return elt * 2;
 });
 console.log( n.toString() );  
 </script>



6. m 배열의 각 요소의 값 중 15보다 큰 것만으로 새로운 배열 n 을 만들어서 출력하세요. 
var m = [45, 4, 9, 16, 25];

<!-- 
<script>
  var m = [45, 4, 9, 16, 25];
  var n = [];
  for (let i = 0; i < m.length; i++) {
      if (m[i]>15) n.push(m[i]);
  }
  console.log(n.toString())
</script>
 -->
<script>
  var m = [45, 4, 9, 16, 25];
  // filter()  조건을 만족하는 배열의 요소만을 가진 새로운 배열을 생성하는 함수
  /* 
  var n =  m.filter(function(elt, i, array) {
				  	return elt > 15;
			  }) 
  */
  // 위의 코딩을 람다식으로 표현
  var n =  m.filter(    (elt) => { return elt > 15  }     );
  console.log(n.toString())    //  [45,16,25]
</script>

7. m 배열의 모든 요소의 합을 구해서 출력하세요. 
var m = [45, 4, 9, 16, 25];

<!-- 
<script>
var m = [45, 4, 9, 16, 25];
var sum = 0;

for (let i = 0; i < m.length; i++) {
    sum += m[i];
}
console.log(sum) ;  // 99
</script>
 -->
 
 
<script>
var m = [45, 4, 9, 16, 25];
// reduce() - 각 배열의 요소  -> 함수 -> 단일 값 생성해서 반환하는 함수
// reduceRight()
/* 
let result = m.reduce(function(sum, elt, i, array) {
					return sum + elt;
				}, 0);
 */				
let result = m.reduce( (sum, elt) => {	return sum + elt;   } );	
 
console.log( result );  // 99				
</script>
 
 

8.  1~5 사이의 임의의 값을 n 변수 저장하고 m 배열에 중복되는 지를 체크하는 코딩을 하세요 . 
var m = [ 1, 3, 5 ];

<script>  
var m = [ 1, 3, 5 ];
var n = parseInt(  Math.random()*5 ) + 1;
console.log( n ); 
// every()   배열의 모든 요소가    조건에 만족하는 지 여부를 반환하는 함수
var check = m.every(function(elt, i, array) {
						return n != elt;
					})
console.log( check );

// some()  배열의 하나의 요소라도 조건에 만족하면 true/false 반환하는 함수

</script>

<!-- 
<script> 
// true, false
function isDuplication( m , n ){
	for (var i = 0; i < m.length; i++) {
		 if( m[i] == n ) return true;
	}
	return false;
}

var m = [ 1, 3, 5 ];
var n = parseInt(  Math.random()*5 ) + 1;
console.log( n );
var check =  isDuplication( m , n );
console.log( check ? "중복O" : "중복X");

</script>
 -->

          
      
      
      
      
      
      
      
      
      
      
      
      
